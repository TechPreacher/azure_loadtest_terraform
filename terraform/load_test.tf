# Note: The Azure Provider doesn't currently have a resource for Azure Load Test configuration
# We'll create the load test resource but the configuration will need to be done manually or through a local script

# Create a variables file that can be used with the shell scripts
resource "local_file" "load_test_variables" {
  filename = "${path.module}/load_test_variables.env"
  file_permission = "0444"
  content = <<-EOT
# Load test configuration variables
# Generated by Terraform - DO NOT EDIT MANUALLY

# Resource information
RESOURCE_GROUP="${var.resource_group_name}"
LOAD_TEST_NAME="${var.load_test_name}"
TEST_NAME="postgresql-load-test"
TEST_DESCRIPTION="Performance test of replication under load: 60 seconds"
TARGET_URL="https://example.com"
ENGINE_INSTANCES=${var.engine_instances}

# PostgreSQL server information
PRIMARY_SERVER_NAME="${azurerm_postgresql_flexible_server.primary.name}"
PRIMARY_SERVER_FQDN="${azurerm_postgresql_flexible_server.primary.fqdn}"
REPLICA_SERVER_NAME="${azurerm_postgresql_flexible_server.replica.name}"
REPLICA_SERVER_FQDN="${azurerm_postgresql_flexible_server.replica.fqdn}"
DATABASE_NAME="${var.postgres_database_name}"

# Test parameters
MAIN_THREADS=${var.main_threads}
MAIN_LOOPS=${var.main_loops}
MAIN_DATABASE="jdbc:${azurerm_postgresql_flexible_server.primary.fqdn}:5432/${var.postgres_database_name}"
REPLICA_THREADS=${var.replica_threads}
REPLICA_LOOPS=${var.replica_loops}
REPLICA_DATABASE="jdbc:${azurerm_postgresql_flexible_server.replica.fqdn}:5432/${var.postgres_database_name}"
MAIN_WRITES_PER_MINUTE=${var.main_writes_per_minute}
REPLICA_READS_PER_MINUTE=${var.replica_reads_per_minute}

# Credentials - as Key Vault references with full secret identifiers
POSTGRES_ADMIN_USERNAME_SECRET="${azurerm_key_vault_secret.postgres_username.id}"
POSTGRES_ADMIN_PASSWORD_SECRET="${azurerm_key_vault_secret.postgres_password.id}"

# The complete secret URLs for direct reference (these include version GUIDs)
POSTGRES_USERNAME_SECRET_URL="${azurerm_key_vault_secret.postgres_username.id}"
POSTGRES_PASSWORD_SECRET_URL="${azurerm_key_vault_secret.postgres_password.id}"

# Direct values (for script use - not recommended for secrets in load tests)
POSTGRES_ADMIN_USERNAME="${var.postgres_admin_username}"
POSTGRES_ADMIN_PASSWORD="${var.postgres_admin_password}"

# Identity information - multiple formats for different contexts
USER_ASSIGNED_IDENTITY_NAME="${azurerm_user_assigned_identity.main.name}"
# Full resource ID (ARM format)
USER_ASSIGNED_IDENTITY_ID="${azurerm_user_assigned_identity.main.id}"
# Client ID of the managed identity (needed for some applications)
USER_ASSIGNED_IDENTITY_CLIENT_ID="${azurerm_user_assigned_identity.main.client_id}"
# Principal ID of the managed identity (object ID in AAD)
USER_ASSIGNED_IDENTITY_PRINCIPAL_ID="${azurerm_user_assigned_identity.main.principal_id}"
# Shorter format sometimes used in Azure Load Test
USER_ASSIGNED_IDENTITY_RESOURCE_NAME="/subscriptions/${var.subscription_id}/resourcegroups/${var.resource_group_name}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${var.identity_name}"

# Primary resource IDs for monitoring - these will need the subscription ID added by the script
PRIMARY_DB_RESOURCE="Microsoft.DBforPostgreSQL/flexibleServers/${azurerm_postgresql_flexible_server.primary.name}"
REPLICA_DB_RESOURCE="Microsoft.DBforPostgreSQL/flexibleServers/${azurerm_postgresql_flexible_server.replica.name}"
PRIMARY_SERVER_ID="${azurerm_postgresql_flexible_server.primary.id}"
REPLICA_SERVER_ID="${azurerm_postgresql_flexible_server.replica.id}"

# Other resources
KEY_VAULT_NAME="${var.key_vault_name}"

# Test criteria
ERROR_PERCENTAGE=90
TIME_WINDOW=60

# File paths
SCRIPT_PATH="../load_test_artifacts/jmeter_script.jmx"
JAR_PATH="../load_test_artifacts/postgresql-42.7.5.jar"

# Config file path
CONFIG_JSON_PATH="${path.module}/load_test_config.json"

# Note: To use these variables in your setup script, use:
# Bash: source ./set_load_test_env.sh
# PowerShell: . .\Set-LoadTestEnv.ps1
EOT
}

# Run post-deployment message about manual steps
resource "null_resource" "manual_steps_reminder" {
  provisioner "local-exec" {
    command = <<-EOT
      echo "===== IMPORTANT: Azure Load Test Setup =====" 
      echo "The Azure Load Test resource has been created."
      echo ""
      echo "Configuration files have been generated for your use:"
      echo "1. load_test_variables.env - Environment variables file"
      echo ""
      echo "To use with your scripts:"
      echo "  1. In Bash/Linux: source ./set_load_test_env.sh"
      echo "  2. In PowerShell/Windows: . .\Set-LoadTestEnv.ps1"
      echo ""
      echo "PostgreSQL Server Information:"
      echo "  - Primary: ${azurerm_postgresql_flexible_server.primary.fqdn}"
      echo "  - Replica: ${azurerm_postgresql_flexible_server.replica.fqdn}"
      echo "  - Database: ${var.postgres_database_name}"
      echo ""
      echo "Important Notes:"
      echo "- The User-Assigned Identity has administrator access to PostgreSQL"
      echo "- Key Vault is configured to allow public network access"
      echo "- Load test files should be in ../load_test_artifacts/"
      echo "========================================"
    EOT
  }

  depends_on = [
    local_file.load_test_variables,
    azurerm_postgresql_flexible_server.primary,
    azurerm_postgresql_flexible_server.replica,
    azurerm_load_test.main,
    azurerm_user_assigned_identity.main
  ]
}