#!/bin/bash

# Azure Load Test Setup Script
# This script configures a load test in Azure using the variables from load_test_variables.sh

# Source the variables generated by Terraform
VARIABLES_FILE="./load_test_variables.sh"
if [ ! -f "$VARIABLES_FILE" ]; then
  echo
  echo "❌ Error: Variables file not found at $VARIABLES_FILE"
  echo "Make sure you run this script from the directory containing load_test_variables.sh"
  exit 1
fi

# Source the variables
echo
echo "💾 Loading configuration from $VARIABLES_FILE..."
source "$VARIABLES_FILE"

# Check if the Azure CLI load testing extension is installed
echo
echo "🔍 Checking for Azure CLI load testing extension..."
if ! az extension list | grep -q "load"; then
  echo "Installing Azure CLI load testing extension..."
  az extension add -n load
fi

# Get current subscription ID
SUBSCRIPTION_ID=$(az account show --query id -o tsv)
echo
echo "📜 Using subscription: $SUBSCRIPTION_ID"

# Create or update the test
echo
echo "🛠️ Creating and configuring the load test..."

# Step 1: Check if the test already exists and create it if not
TEST_EXISTS=$(az load test list \
  --resource-group "$RESOURCE_GROUP" \
  --load-test-resource "$LOAD_TEST_NAME" \
  -o tsv 2>/dev/null || echo "")

if [ -z "$TEST_EXISTS" ]; then
  echo
  echo "💫 Creating new test '$TEST_NAME'..."
  
  # Create a test with basic parameters
  az load test create \
    --test-id "$TEST_NAME" \
    --display-name "$TEST_NAME" \
    --description "$TEST_DESCRIPTION" \
    --resource-group "$RESOURCE_GROUP" \
    --load-test-resource "$LOAD_TEST_NAME" \
    --autostop-error-rate "$ERROR_PERCENTAGE" \
    --autostop-time-window "$TIME_WINDOW" \
    --autostop enable \
    --test-type "JMX" \
    --test-plan "$SCRIPT_PATH" \
    --engine-instances "$ENGINE_INSTANCES" \
    --engine-ref-id-type SystemAssigned \
    --keyvault-reference-id "$USER_ASSIGNED_IDENTITY_RESOURCE_NAME" \
    --metrics-reference-id "$USER_ASSIGNED_IDENTITY_RESOURCE_NAME" \
    --env main_threads=$MAIN_THREADS main_loops=$MAIN_LOOPS main_database=$MAIN_DATABASE replica_threads=$REPLICA_THREADS replica_loops=$REPLICA_LOOPS replica_database=$REPLICA_DATABASE main_writes_per_minute=$MAIN_WRITES_PER_MINUTE replica_reads_per_minute=$REPLICA_READS_PER_MINUTE \
    --secret mainpassword=$POSTGRES_ADMIN_PASSWORD_SECRET replicapassword=$POSTGRES_ADMIN_PASSWORD_SECRET mainuser=$POSTGRES_ADMIN_USERNAME_SECRET replicauser=$POSTGRES_ADMIN_USERNAME_SECRET

else
  echo
  echo "👷 Test '$TEST_NAME' already exists, updating configuration..."
  
  # Update test with basic parameters
  az load test update \
    --test-id "$TEST_NAME" \
    --display-name "$TEST_NAME" \
    --description "$TEST_DESCRIPTION" \
    --resource-group "$RESOURCE_GROUP" \
    --load-test-resource "$LOAD_TEST_NAME" \
    --autostop-error-rate "$ERROR_PERCENTAGE" \
    --autostop-time-window "$TIME_WINDOW" \
    --autostop enable \
    --test-plan "$SCRIPT_PATH" \
    --engine-instances "$ENGINE_INSTANCES" \
    --engine-ref-id-type SystemAssigned \
    --keyvault-reference-id "$USER_ASSIGNED_IDENTITY_RESOURCE_NAME" \
    --metrics-reference-id "$USER_ASSIGNED_IDENTITY_RESOURCE_NAME" \
    --env main_threads=$MAIN_THREADS main_loops=$MAIN_LOOPS main_database=$MAIN_DATABASE replica_threads=$REPLICA_THREADS replica_loops=$REPLICA_LOOPS replica_database=$REPLICA_DATABASE main_writes_per_minute=$MAIN_WRITES_PER_MINUTE replica_reads_per_minute=$REPLICA_READS_PER_MINUTE \
    --secret mainpassword=$POSTGRES_ADMIN_PASSWORD_SECRET replicapassword=$POSTGRES_ADMIN_PASSWORD_SECRET mainuser=$POSTGRES_ADMIN_USERNAME_SECRET replicauser=$POSTGRES_ADMIN_USERNAME_SECRET
fi

# Step 2: Upload additional files - this often requires manual steps
if [ -f "$JAR_PATH" ]; then
  echo
  echo "✅ JDBC driver found at: $JAR_PATH"
  echo
  echo "Please upload this file manually through the Azure Portal."
  echo
  echo "To upload the JDBC driver manually:"
  echo "1. Go to Azure Portal > Load Testing > $LOAD_TEST_NAME > Tests"
  echo "2. Select the test '$TEST_NAME'"
  echo "3. Click 'Configure', select 'Test' and navigate to the 'Test Plan' section"
  echo "4. Upload the JDBC driver file: $JAR_PATH"
else
  echo
  echo "❌ Warning: JDBC driver not found at $JAR_PATH"
fi

echo
echo "‼️ Please manually update the following settings in the load test:"
echo
echo "1. Go to Azure Portal > Load Testing > $LOAD_TEST_NAME > Tests"
echo "2. Select the test '$TEST_NAME'"
echo "3. Click 'Configure', select 'Test'."
echo "4. In the 'Test Plan' section, set 'Identity' to 'User-assigned identity' and select '$USER_ASSIGNED_IDENTITY_NAME'."
echo "5. In the 'Parameters' section, set the 'Key Vault reference identity'to 'User-assigned identity' and select '$USER_ASSIGNED_IDENTITY_NAME'."
echo "6. In the 'Monitoring' section, under 'Resources', add the two PostgreSQL databases: '$PRIMARY_SERVER_NAME' and '$REPLICA_SERVER_NAME'."
echo "7. In the 'Monitoring' section, under 'Metrics reference identity', set the 'Identity type'to 'User-assigned identity' and select '$USER_ASSIGNED_IDENTITY_NAME'."
echo "8. Click 'Apply' to save the changes."
echo
echo "✅ Load test setup script completed."